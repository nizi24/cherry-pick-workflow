name: cherry-picker

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set Git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Parse PR description for target branches
        id: parse_branches
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          checked_checkboxes=$(echo "$PR_BODY" | grep '^- \[x\] ' | sed 's/^- \[x\] //g')
          if echo "$checked_checkboxes" | grep -q 'チェリピ不要'; then
            echo "target_branches=''" >> $GITHUB_OUTPUT
          else
            target_branches=$(echo "$checked_checkboxes" | sed -nE 's/^([^\n]*?)に適用.*/\1/p' | tr '\n' ' ')
            echo "target_branches=$target_branches" >> $GITHUB_OUTPUT
          fi

      # - uses: mxschmitt/action-tmate@960bb4532c376c3df441b7f58b7ba99be4081c8f
      #   env:
      #     TARGET_BRANCHES: ${{ steps.parse_branches.outputs.target_branches }}
      #     PR_NUMBER: ${{ github.event.pull_request.number }}
      #     MERGE_COMMIT_SHA: ${{ github.event.pull_request.merge_commit_sha }}
      #     PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      #   with:
      #     limit-access-to-actor: true

      - name: cherry-pick
        if: steps.parse_branches.outputs.target_branches != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_BRANCHES: ${{ steps.parse_branches.outputs.target_branches }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          MERGE_COMMIT_SHA: ${{ github.event.pull_request.merge_commit_sha }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        run: |
          for branch in $TARGET_BRANCHES; do
            echo "Cherry-picking to $branch $MERGE_COMMIT_SHA"
            git fetch --depth=1 origin $branch
            git checkout $branch

            git checkout .
            git clean -fd

            git cherry-pick $MERGE_COMMIT_SHA || {
              echo "::error::Conflict detected in $branch. Please resolve manually."

              new_branch_name="cherry-pick/$branch/$PR_NUMBER"
              git checkout -b $new_branch_name
              git add .
              git reset .github
              git commit -m "Cherry-pick from #$PR_NUMBER failed. Please resolve manually." --allow-empty
              git push origin $new_branch_name

              pr_title="$branch/cherry-pick from #$PR_NUMBER"
              pr_body=$(echo "このPRは自動作成されました。
              関連するPR #$PR_NUMBER

              @$PR_AUTHOR コンフリクトを解消してください。
              " | sed 's/^[[:space:]]*//'
              )
              gh pr create --base "$branch" --head "$new_branch_name" --title "$pr_title" --body "$pr_body" --assignee "$PR_AUTHOR"

              continue
            }

            git pull --rebase origin $branch
            git push origin $branch
          done
